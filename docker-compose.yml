# Quantum-Secured Autonomous Trading System
# Agent Zero master control with architecturally isolated trading agent

version: '3.8'

services:
  # Redis for general agent network
  agent-redis:
    image: redis:7-alpine
    container_name: agent-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - agent-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Isolated Redis for Trading Agent ONLY
  trading-redis:
    image: redis:7-alpine
    container_name: trading-redis
    restart: unless-stopped
    volumes:
      - trading_redis_data:/data
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru --requirepass ${TRADING_REDIS_PASSWORD:-quantum_secure_redis_2024}
    networks:
      - trading-isolated-network  # ONLY on isolated network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${TRADING_REDIS_PASSWORD:-quantum_secure_redis_2024}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # LLM Proxy with self-learning capabilities
  agent-llm-proxy:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: agent-llm-proxy
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://agent-redis:6379
      - LLM_PROXY_API_KEY=${LLM_PROXY_API_KEY:-default-api-key}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - IO_INTELLIGENCE_API_KEY=${IO_INTELLIGENCE_API_KEY}
    depends_on:
      - agent-redis
    networks:
      - agent-network
    volumes:
      - ./logs:/app/logs
    command: ["python", "-m", "uvicorn", "llm-proxy.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Quantum-Secured Trading Agent (Architecturally Isolated)
  quantum-trading-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: quantum-trading-agent
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://trading-redis:6379
      - AGENT_ZERO_MASTER_SECRET=${AGENT_ZERO_MASTER_SECRET:-quantum_agent_zero_master_2024}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.mainnet-beta.solana.com}
      - TRADING_WALLET_PRIVATE_KEY=${TRADING_WALLET_PRIVATE_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - QUANTUM_ISOLATION=true
      - TRADING_AGENT_ID=quantum_secure_trader_001
    depends_on:
      - trading-redis
    networks:
      - trading-isolated-network  # ONLY on isolated network
    volumes:
      - trading_data:/app/data:rw
      - trading_logs:/app/logs:rw
    command: ["python", "-m", "uvicorn", "solana-bot.quantum_secure_trading_agent:app", "--host", "0.0.0.0", "--port", "8001"]
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8001/security/status')"]
      interval: 60s
      timeout: 15s
      retries: 3
    security_opt:
      - no-new-privileges:true
      - apparmor:unconfined
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m,uid=1001,gid=1001
    user: "1001:1001"
    cap_drop:
      - ALL
    cap_add:
      - NET_ADMIN

  # Agent Zero Gateway (Master Control Interface)
  agent-zero-gateway:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: agent-zero-gateway
    restart: unless-stopped
    ports:
      - "8888:8888"  # Secure port for Agent Zero
    environment:
      - REDIS_URL=redis://agent-redis:6379
      - AGENT_ZERO_MASTER_SECRET=${AGENT_ZERO_MASTER_SECRET:-quantum_agent_zero_master_2024}
      - TRADING_AGENT_URL=http://quantum-trading-agent:8001
      - QUANTUM_GATEWAY_MODE=true
    depends_on:
      - agent-redis
      - quantum-trading-agent
    networks:
      - agent-network
      - trading-isolated-network  # Bridge between networks
    volumes:
      - ./logs:/app/logs
    command: ["python", "server/agent_zero_gateway.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/agent_zero/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Browser automation service
  agent-browser:
    image: browserless/chrome:latest
    container_name: agent-browser
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - CONCURRENT=10
      - TOKEN=${BROWSER_TOKEN:-}
      - MAX_CONCURRENT_SESSIONS=5
      - CHROME_REFRESH_TIME=2000
    networks:
      - agent-network
    shm_size: 2gb
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined

  # Search engine (SearXNG)
  agent-searxng:
    image: searxng/searxng:latest
    container_name: agent-searxng
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./searxng-config:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/
    networks:
      - agent-network
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

  # Container Orchestrator
  agent-orchestrator:
    build:
      context: ./orchestrator
      dockerfile: ../Dockerfile.orchestrator
    container_name: agent-orchestrator
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://agent-redis:6379
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/app/logs
    depends_on:
      - agent-redis
    networks:
      - agent-network
    privileged: true  # Required for Docker socket access
    command: ["python", "orchestrator.py"]

networks:
  agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  
  # ISOLATED network for trading operations - NO external access
  trading-isolated-network:
    driver: bridge
    internal: true  # Completely isolated from internet
    ipam:
      config:
        - subnet: 172.21.0.0/16
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"  # Disable inter-container communication
      com.docker.network.bridge.enable_ip_masquerade: "false"  # No NAT

volumes:
  redis_data:
    driver: local
  
  # Isolated storage for trading agent
  trading_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1g,uid=1001,gid=1001,mode=0700  # Secure temporary storage
  
  trading_logs:
    driver: local
    driver_opts:
      type: tmpfs  
      device: tmpfs
      o: size=500m,uid=1001,gid=1001,mode=0700  # Secure log storage
      
  trading_redis_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=200m,uid=999,gid=999,mode=0700  # Secure Redis storage